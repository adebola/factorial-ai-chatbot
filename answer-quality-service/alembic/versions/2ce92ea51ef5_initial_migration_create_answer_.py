"""Initial migration: create answer feedback, quality metrics, knowledge gaps, and session quality tables

Revision ID: 2ce92ea51ef5
Revises: 
Create Date: 2025-10-17 23:14:46.545142

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2ce92ea51ef5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('answer_feedback',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('tenant_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('message_id', sa.String(length=36), nullable=False),
    sa.Column('feedback_type', sa.String(length=20), nullable=False),
    sa.Column('feedback_comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answer_feedback_id'), 'answer_feedback', ['id'], unique=False)
    op.create_index(op.f('ix_answer_feedback_message_id'), 'answer_feedback', ['message_id'], unique=False)
    op.create_index(op.f('ix_answer_feedback_session_id'), 'answer_feedback', ['session_id'], unique=False)
    op.create_index(op.f('ix_answer_feedback_tenant_id'), 'answer_feedback', ['tenant_id'], unique=False)
    op.create_table('knowledge_gaps',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('tenant_id', sa.String(length=36), nullable=False),
    sa.Column('question_pattern', sa.Text(), nullable=False),
    sa.Column('example_questions', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('occurrence_count', sa.Integer(), nullable=False),
    sa.Column('avg_confidence', sa.Float(), nullable=True),
    sa.Column('negative_feedback_count', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('first_detected_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_occurrence_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_gaps_id'), 'knowledge_gaps', ['id'], unique=False)
    op.create_index(op.f('ix_knowledge_gaps_tenant_id'), 'knowledge_gaps', ['tenant_id'], unique=False)
    op.create_table('rag_quality_metrics',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('tenant_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('message_id', sa.String(length=36), nullable=False),
    sa.Column('retrieval_score', sa.Float(), nullable=True),
    sa.Column('documents_retrieved', sa.Integer(), nullable=True),
    sa.Column('answer_confidence', sa.Float(), nullable=True),
    sa.Column('sources_cited', sa.Integer(), nullable=True),
    sa.Column('answer_length', sa.Integer(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('basic_sentiment', sa.String(length=20), nullable=True),
    sa.Column('sentiment_confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rag_quality_metrics_id'), 'rag_quality_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_rag_quality_metrics_message_id'), 'rag_quality_metrics', ['message_id'], unique=True)
    op.create_index(op.f('ix_rag_quality_metrics_session_id'), 'rag_quality_metrics', ['session_id'], unique=False)
    op.create_index(op.f('ix_rag_quality_metrics_tenant_id'), 'rag_quality_metrics', ['tenant_id'], unique=False)
    op.create_table('session_quality',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('tenant_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('total_messages', sa.Integer(), nullable=False),
    sa.Column('messages_with_feedback', sa.Integer(), nullable=False),
    sa.Column('helpful_count', sa.Integer(), nullable=False),
    sa.Column('not_helpful_count', sa.Integer(), nullable=False),
    sa.Column('avg_retrieval_score', sa.Float(), nullable=True),
    sa.Column('avg_confidence_score', sa.Float(), nullable=True),
    sa.Column('avg_response_time_ms', sa.Integer(), nullable=True),
    sa.Column('session_success', sa.Boolean(), nullable=True),
    sa.Column('success_indicators', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_quality_id'), 'session_quality', ['id'], unique=False)
    op.create_index(op.f('ix_session_quality_session_id'), 'session_quality', ['session_id'], unique=True)
    op.create_index(op.f('ix_session_quality_tenant_id'), 'session_quality', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_session_quality_tenant_id'), table_name='session_quality')
    op.drop_index(op.f('ix_session_quality_session_id'), table_name='session_quality')
    op.drop_index(op.f('ix_session_quality_id'), table_name='session_quality')
    op.drop_table('session_quality')
    op.drop_index(op.f('ix_rag_quality_metrics_tenant_id'), table_name='rag_quality_metrics')
    op.drop_index(op.f('ix_rag_quality_metrics_session_id'), table_name='rag_quality_metrics')
    op.drop_index(op.f('ix_rag_quality_metrics_message_id'), table_name='rag_quality_metrics')
    op.drop_index(op.f('ix_rag_quality_metrics_id'), table_name='rag_quality_metrics')
    op.drop_table('rag_quality_metrics')
    op.drop_index(op.f('ix_knowledge_gaps_tenant_id'), table_name='knowledge_gaps')
    op.drop_index(op.f('ix_knowledge_gaps_id'), table_name='knowledge_gaps')
    op.drop_table('knowledge_gaps')
    op.drop_index(op.f('ix_answer_feedback_tenant_id'), table_name='answer_feedback')
    op.drop_index(op.f('ix_answer_feedback_session_id'), table_name='answer_feedback')
    op.drop_index(op.f('ix_answer_feedback_message_id'), table_name='answer_feedback')
    op.drop_index(op.f('ix_answer_feedback_id'), table_name='answer_feedback')
    op.drop_table('answer_feedback')
    # ### end Alembic commands ###
