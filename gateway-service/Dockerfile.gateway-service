# Production Dockerfile for Gateway Service
# Multi-stage build for smaller production image

# Build stage
FROM openjdk:21-jdk-slim AS build

WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy Maven wrapper and pom.xml first for better Docker layer caching
COPY gateway-service/mvnw .
COPY gateway-service/mvnw.cmd .
COPY gateway-service/.mvn .mvn
COPY gateway-service/pom.xml .

# Make mvnw executable
RUN chmod +x ./mvnw

# Download dependencies (this will be cached if pom.xml doesn't change)
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY gateway-service/src ./src

# Build the application
RUN ./mvnw clean package -DskipTests

# Production stage
FROM openjdk:21-jdk-slim

WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy the built jar from build stage
COPY --from=build /app/target/gateway-service-*.jar app.jar

# Create non-root user
RUN adduser --disabled-password --gecos '' appuser && \
    chown appuser:appuser app.jar
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/actuator/health || exit 1

# Expose port
EXPOSE 8080

# Run the application
ENTRYPOINT ["java", "-Xmx512m", "-Xms256m", "-jar", "app.jar"]