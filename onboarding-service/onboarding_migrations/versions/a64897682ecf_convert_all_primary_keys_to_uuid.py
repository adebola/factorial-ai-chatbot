"""convert_all_primary_keys_to_uuid

Revision ID: a64897682ecf
Revises: ffcf577e912d
Create Date: 2025-08-17 16:43:27.631658

"""
from typing import Sequence, Union
import uuid

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a64897682ecf'
down_revision: Union[str, Sequence[str], None] = 'ffcf577e912d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema - Convert all primary keys to UUIDs."""
    connection = op.get_bind()
    
    # WARNING: This migration will TRUNCATE all tables and start fresh with UUIDs
    # This is appropriate for development but NOT for production with existing data
    
    # Truncate all tables that have foreign key relationships first
    connection.execute(sa.text("TRUNCATE TABLE website_pages CASCADE"))
    connection.execute(sa.text("TRUNCATE TABLE website_ingestions CASCADE")) 
    connection.execute(sa.text("TRUNCATE TABLE documents CASCADE"))
    
    # Drop existing sequences
    connection.execute(sa.text("DROP SEQUENCE IF EXISTS documents_id_seq CASCADE"))
    connection.execute(sa.text("DROP SEQUENCE IF EXISTS website_ingestions_id_seq CASCADE"))
    connection.execute(sa.text("DROP SEQUENCE IF EXISTS website_pages_id_seq CASCADE"))
    
    # Convert columns to VARCHAR(36) for UUIDs
    op.alter_column('documents', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('documents', 'tenant_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    
    op.alter_column('website_ingestions', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('website_ingestions', 'tenant_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    
    op.alter_column('website_pages', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('website_pages', 'tenant_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('website_pages', 'ingestion_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('website_pages', 'ingestion_id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('website_pages', 'tenant_id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('website_pages', 'id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('website_ingestions', 'tenant_id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('website_ingestions', 'id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('documents', 'tenant_id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('documents', 'id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
