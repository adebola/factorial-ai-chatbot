"""set_created_at_updated_at_defaults

Revision ID: 2ada75057962
Revises: fb67285677a0
Create Date: 2025-08-13 14:41:02.043729

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2ada75057962'
down_revision: Union[str, Sequence[str], None] = 'fb67285677a0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto-generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=500), nullable=False),
    sa.Column('original_filename', sa.String(length=500), nullable=False),
    sa.Column('file_path', sa.String(length=1000), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='documentstatus'), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_index(op.f('ix_documents_tenant_id'), 'documents', ['tenant_id'], unique=False)
    op.create_table('website_ingestions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('base_url', sa.String(length=500), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='ingestionstatus'), nullable=True),
    sa.Column('pages_discovered', sa.Integer(), nullable=True),
    sa.Column('pages_processed', sa.Integer(), nullable=True),
    sa.Column('pages_failed', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_website_ingestions_id'), 'website_ingestions', ['id'], unique=False)
    op.create_index(op.f('ix_website_ingestions_tenant_id'), 'website_ingestions', ['tenant_id'], unique=False)
    op.create_table('website_pages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('ingestion_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=1000), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('content_hash', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='documentstatus'), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_website_pages_id'), 'website_pages', ['id'], unique=False)
    op.create_index(op.f('ix_website_pages_ingestion_id'), 'website_pages', ['ingestion_id'], unique=False)
    op.create_index(op.f('ix_website_pages_tenant_id'), 'website_pages', ['tenant_id'], unique=False)
    op.alter_column('tenant', 'domain',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('tenant', 'website_url',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=True)
    op.alter_column('tenant', 'api_key',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=255),
               nullable=True)
    op.alter_column('tenant', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('tenant', 'subscription_tier',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('tenant', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               server_default=sa.text('now()'))
    op.alter_column('tenant', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.drop_constraint(op.f('tenant_api_key_key'), 'tenant', type_='unique')
    op.drop_constraint(op.f('tenant_domain_key'), 'tenant', type_='unique')
    op.create_index(op.f('ix_tenant_api_key'), 'tenant', ['api_key'], unique=True)
    op.create_index(op.f('ix_tenant_domain'), 'tenant', ['domain'], unique=True)
    op.create_index(op.f('ix_tenant_id'), 'tenant', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tenant_id'), table_name='tenant')
    op.drop_index(op.f('ix_tenant_domain'), table_name='tenant')
    op.drop_index(op.f('ix_tenant_api_key'), table_name='tenant')
    op.create_unique_constraint(op.f('tenant_domain_key'), 'tenant', ['domain'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('tenant_api_key_key'), 'tenant', ['api_key'], postgresql_nulls_not_distinct=False)
    op.alter_column('tenant', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('tenant', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('tenant', 'subscription_tier',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('tenant', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('tenant', 'api_key',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('tenant', 'website_url',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('tenant', 'domain',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_index(op.f('ix_website_pages_tenant_id'), table_name='website_pages')
    op.drop_index(op.f('ix_website_pages_ingestion_id'), table_name='website_pages')
    op.drop_index(op.f('ix_website_pages_id'), table_name='website_pages')
    op.drop_table('website_pages')
    op.drop_index(op.f('ix_website_ingestions_tenant_id'), table_name='website_ingestions')
    op.drop_index(op.f('ix_website_ingestions_id'), table_name='website_ingestions')
    op.drop_table('website_ingestions')
    op.drop_index(op.f('ix_documents_tenant_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###
